OMNeT++ Discrete Event Simulation  (C) 1992-2010 Andras Varga, OpenSim Ltd.
Version: 4.1, build: 100611-4b63c38, edition: Academic Public License -- NOT FOR COMMERCIAL USE
See the license for distribution terms and warranty disclaimer
Setting up Cmdenv...
Loading NED files from /home/karl/git-repo/mixim/base: 17
Loading NED files from /home/karl/git-repo/mixim/modules: 40
Loading NED files from /home/karl/git-repo/mixim/tests: 41

Preparing for running configuration Test1, run #0...
Scenario: $repetition=0
Assigned runID=Test1-0-20100616-13:39:24-4967
Setting up network `bmSim'...
Initializing...
Initializing module bmSim, stage 0
Initializing module bmSim.world, stage 0
Initializing module bmSim.node[0], stage 0
Initializing module bmSim.node[0].mobility, stage 0
Initializing module bmSim.node2[0], stage 0
Initializing module bmSim.node2[0].mobility, stage 0
Initializing module bmSim.node[0].mobility, stage 1
updatePosition:  HostMove  startPos: (60,60,60) direction: (0,0,0) startTime: 0 speed: 0
Starting tests...
Passed: World pointer initialised.
Testing simple checkIfOutside... 
Passed: Step: (60,0,0)
Passed: Step: (-60,0,0)
Passed: Step: (0,60,0)
Passed: Step: (0,-60,0)
Passed: Step: (0,0,60)
Passed: Step: (0,0,-60)
Testing complex checkIfOutside... 
Passed: Step to border: (60,-60,-60)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,60)
Passed: Step to border: (60,-60,60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,60,-60)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,60,-60)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,60,60)
Passed: Step to border: (-60,-60,-60)
Passed: Step to border: (-60,-60,0)
Passed: Step to border: (-60,-60,0)
Passed: Step to border: (-60,-60,0)
Passed: Step to border: (-60,-60,0)
Passed: Step to border: (-60,-60,60)
Passed: Step to border: (-60,-60,60)
Passed: Step to border: (-60,0,-60)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,-60)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,-60)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,-60)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,0)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,60,-60)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,60)
Passed: Step to border: (-60,60,60)
Passed: Step to border: (-60,60,-60)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,60)
Passed: Step to border: (-60,60,60)
Passed: Step to border: (-60,60,-60)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,0)
Passed: Step to border: (-60,60,60)
Passed: Step to border: (-60,60,60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (60,60,-60)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,60,-60)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,60,60)
Passed: Step to border: (-60,-60,-60)
Passed: Step to border: (-60,-60,0)
Passed: Step to border: (-60,-60,0)
Passed: Step to border: (-60,-60,0)
Passed: Step to border: (-60,-60,0)
Passed: Step to border: (-60,-60,60)
Passed: Step to border: (-60,-60,60)
Passed: Step to border: (0,-60,-60)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,-60,-60)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,-60,-60)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,-60,-60)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,0)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (60,-60,-60)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,60)
Passed: Step to border: (60,-60,60)
Passed: Step to border: (60,-60,-60)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,0)
Passed: Step to border: (60,-60,60)
Passed: Step to border: (60,-60,60)
Passed: Step to border: (-60,-60,60)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,0,60)
Passed: Step to border: (-60,60,60)
Passed: Step to border: (-60,60,60)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,-60,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (60,-60,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,-60,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,0,60)
Passed: Step to border: (60,60,60)
Passed: Step to border: (60,60,60)
Passed: Step to border: (-60,-60,-60)
Passed: Step to border: (-60,0,-60)
Passed: Step to border: (-60,0,-60)
Passed: Step to border: (-60,0,-60)
Passed: Step to border: (-60,0,-60)
Passed: Step to border: (-60,60,-60)
Passed: Step to border: (-60,60,-60)
Passed: Step to border: (0,-60,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,-60,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,-60,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,-60,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,0,-60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (0,60,-60)
Passed: Step to border: (60,-60,-60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,60,-60)
Passed: Step to border: (60,60,-60)
Passed: Step to border: (60,-60,-60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,0,-60)
Passed: Step to border: (60,60,-60)
Passed: Step to border: (60,60,-60)
Testing border and edges checkIfOutside... 
Passed: Step to border: (0,0,0)
Passed: Step to border: (60,0,0)
Passed: Step to border: (0,60,0)
Passed: Step to border: (60,60,0)
Passed: Step to border: (60,0,60)
Passed: Step to border: (0,0,60)
Passed: Step to border: (0,60,60)
Passed: Step to border: (60,60,60)
Initializing module bmSim.node2[0].mobility, stage 1
updatePosition:  HostMove  startPos: (102.953,72.3316,101.312) direction: (0,0,0) startTime: 0 speed: 0.1
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 1
Passed: Check for correct target position of border handling 1
Passed: Check for correct step of border handling 1

Running simulation...
** Event #1  T=0.054488317738  0% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,60,60) direction: (-1,0,0) startTime: 0 speed: 1
** Event #2  T=0.154488317738  0% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,60,60) direction: (-1,0,0) startTime: 0 speed: 1
** Event #3  T=0.254488317738  0% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,60,60) direction: (-1,0,0) startTime: 0 speed: 1
** Event #4  T=0.354488317738  0% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,60,60) direction: (-1,0,0) startTime: 0 speed: 1
** Event #5  T=0.454488317738  0% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,60,60) direction: (-1,0,0) startTime: 0 speed: 1
** Event #6  T=0.5  1% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 1
Passed: Check for correct start position of border move 1
Passed: Check for correct direction of border move 1
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 2
Passed: Check for correct target position of border handling 2
Passed: Check for correct step of border handling 2
updatePosition:  HostMove  startPos: (119.5,60,60) direction: (1,0,0) startTime: 0.5 speed: 1
** Event #7  T=0.554488317738  1% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,60,60) direction: (1,0,0) startTime: 0.5 speed: 1
** Event #8  T=0.654488317738  1% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,60,60) direction: (1,0,0) startTime: 0.5 speed: 1
** Event #9  T=0.754488317738  1% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,60,60) direction: (1,0,0) startTime: 0.5 speed: 1
** Event #10  T=0.854488317738  1% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,60,60) direction: (1,0,0) startTime: 0.5 speed: 1
** Event #11  T=0.954488317738  1% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,60,60) direction: (1,0,0) startTime: 0.5 speed: 1
** Event #12  T=1  2% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 2
Passed: Check for correct start position of border move 2
Passed: Check for correct direction of border move 2
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 3
Passed: Check for correct target position of border handling 3
Passed: Check for correct step of border handling 3
updatePosition:  HostMove  startPos: (60,0.5,60) direction: (0,-1,0) startTime: 1 speed: 1
** Event #13  T=1.054488317738  2% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,0.5,60) direction: (0,-1,0) startTime: 1 speed: 1
** Event #14  T=1.154488317738  2% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,0.5,60) direction: (0,-1,0) startTime: 1 speed: 1
** Event #15  T=1.254488317738  2% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,0.5,60) direction: (0,-1,0) startTime: 1 speed: 1
** Event #16  T=1.354488317738  2% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,0.5,60) direction: (0,-1,0) startTime: 1 speed: 1
** Event #17  T=1.454488317738  2% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,0.5,60) direction: (0,-1,0) startTime: 1 speed: 1
** Event #18  T=1.5  2% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 3
Passed: Check for correct start position of border move 3
Passed: Check for correct direction of border move 3
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 4
Passed: Check for correct target position of border handling 4
Passed: Check for correct step of border handling 4
updatePosition:  HostMove  startPos: (60,119.5,60) direction: (0,1,0) startTime: 1.5 speed: 1
** Event #19  T=1.554488317738  3% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,119.5,60) direction: (0,1,0) startTime: 1.5 speed: 1
** Event #20  T=1.654488317738  3% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,119.5,60) direction: (0,1,0) startTime: 1.5 speed: 1
** Event #21  T=1.754488317738  3% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,119.5,60) direction: (0,1,0) startTime: 1.5 speed: 1
** Event #22  T=1.854488317738  3% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,119.5,60) direction: (0,1,0) startTime: 1.5 speed: 1
** Event #23  T=1.954488317738  3% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,119.5,60) direction: (0,1,0) startTime: 1.5 speed: 1
** Event #24  T=2  4% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 4
Passed: Check for correct start position of border move 4
Passed: Check for correct direction of border move 4
Passed: In our test every handleIfOutside should find a collission.
updatePosition:  HostMove  startPos: (0.5,0.5,60) direction: (-0.707107,-0.707107,0) startTime: 2 speed: 1.41421
** Event #25  T=2.054488317738  4% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,0.5,60) direction: (-0.707107,-0.707107,0) startTime: 2 speed: 1.41421
** Event #26  T=2.154488317738  4% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,0.5,60) direction: (-0.707107,-0.707107,0) startTime: 2 speed: 1.41421
** Event #27  T=2.254488317738  4% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,0.5,60) direction: (-0.707107,-0.707107,0) startTime: 2 speed: 1.41421
** Event #28  T=2.354488317738  4% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,0.5,60) direction: (-0.707107,-0.707107,0) startTime: 2 speed: 1.41421
** Event #29  T=2.454488317738  4% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,0.5,60) direction: (-0.707107,-0.707107,0) startTime: 2 speed: 1.41421
** Event #30  T=2.5  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 5
Passed: Check for correct target position of border handling 5
Passed: Check for correct step of border handling 5
updatePosition:  HostMove  startPos: (0,0,60) direction: (0.707107,-0.707107,0) startTime: 2.5 speed: 1.41421
** Event #31  T=2.5  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 5
Passed: Check for correct start position of border move 5
Passed: Check for correct direction of border move 5
Passed: In our test every handleIfOutside should find a collission.
updatePosition:  HostMove  startPos: (0.5,119.5,60) direction: (-0.707107,0.707107,0) startTime: 2.5 speed: 1.41421
** Event #32  T=2.554488317738  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,119.5,60) direction: (-0.707107,0.707107,0) startTime: 2.5 speed: 1.41421
** Event #33  T=2.654488317738  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,119.5,60) direction: (-0.707107,0.707107,0) startTime: 2.5 speed: 1.41421
** Event #34  T=2.754488317738  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,119.5,60) direction: (-0.707107,0.707107,0) startTime: 2.5 speed: 1.41421
** Event #35  T=2.854488317738  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,119.5,60) direction: (-0.707107,0.707107,0) startTime: 2.5 speed: 1.41421
** Event #36  T=2.954488317738  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.5,119.5,60) direction: (-0.707107,0.707107,0) startTime: 2.5 speed: 1.41421
** Event #37  T=3  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 6
Passed: Check for correct target position of border handling 6
Passed: Check for correct step of border handling 6
updatePosition:  HostMove  startPos: (0,120,60) direction: (0.707107,0.707107,0) startTime: 3 speed: 1.41421
** Event #38  T=3  5% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 6
Passed: Check for correct start position of border move 6
Passed: Check for correct direction of border move 6
Passed: In our test every handleIfOutside should find a collission.
updatePosition:  HostMove  startPos: (119.5,119.5,60) direction: (0.707107,0.707107,0) startTime: 3 speed: 1.41421
** Event #39  T=3.054488317738  6% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,119.5,60) direction: (0.707107,0.707107,0) startTime: 3 speed: 1.41421
** Event #40  T=3.154488317738  6% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,119.5,60) direction: (0.707107,0.707107,0) startTime: 3 speed: 1.41421
** Event #41  T=3.254488317738  6% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,119.5,60) direction: (0.707107,0.707107,0) startTime: 3 speed: 1.41421
** Event #42  T=3.354488317738  6% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,119.5,60) direction: (0.707107,0.707107,0) startTime: 3 speed: 1.41421
** Event #43  T=3.454488317738  6% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,119.5,60) direction: (0.707107,0.707107,0) startTime: 3 speed: 1.41421
** Event #44  T=3.5  7% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 7
Passed: Check for correct target position of border handling 7
Passed: Check for correct step of border handling 7
updatePosition:  HostMove  startPos: (120,120,60) direction: (-0.707107,0.707107,0) startTime: 3.5 speed: 1.41421
** Event #45  T=3.5  7% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 7
Passed: Check for correct start position of border move 7
Passed: Check for correct direction of border move 7
Passed: In our test every handleIfOutside should find a collission.
updatePosition:  HostMove  startPos: (119.5,0.5,60) direction: (0.707107,-0.707107,0) startTime: 3.5 speed: 1.41421
** Event #46  T=3.554488317738  7% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,0.5,60) direction: (0.707107,-0.707107,0) startTime: 3.5 speed: 1.41421
** Event #47  T=3.654488317738  7% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,0.5,60) direction: (0.707107,-0.707107,0) startTime: 3.5 speed: 1.41421
** Event #48  T=3.754488317738  7% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,0.5,60) direction: (0.707107,-0.707107,0) startTime: 3.5 speed: 1.41421
** Event #49  T=3.854488317738  7% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,0.5,60) direction: (0.707107,-0.707107,0) startTime: 3.5 speed: 1.41421
** Event #50  T=3.954488317738  7% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (119.5,0.5,60) direction: (0.707107,-0.707107,0) startTime: 3.5 speed: 1.41421
** Event #51  T=4  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 8
Passed: Check for correct target position of border handling 8
Passed: Check for correct step of border handling 8
updatePosition:  HostMove  startPos: (120,0,60) direction: (-0.707107,-0.707107,0) startTime: 4 speed: 1.41421
** Event #52  T=4  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 8
Passed: Check for correct start position of border move 8
Passed: Check for correct direction of border move 8
Passed: In our test every handleIfOutside should find a collission.
updatePosition:  HostMove  startPos: (2.372,1.211,60) direction: (0.999947,-0.0102946,0) startTime: 4 speed: 235.268
** Event #53  T=4.054488317738  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (2.372,1.211,60) direction: (0.999947,-0.0102946,0) startTime: 4 speed: 235.268
** Event #54  T=4.154488317738  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (2.372,1.211,60) direction: (0.999947,-0.0102946,0) startTime: 4 speed: 235.268
** Event #55  T=4.254488317738  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (2.372,1.211,60) direction: (0.999947,-0.0102946,0) startTime: 4 speed: 235.268
** Event #56  T=4.354488317738  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (2.372,1.211,60) direction: (0.999947,-0.0102946,0) startTime: 4 speed: 235.268
** Event #57  T=4.454488317738  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (2.372,1.211,60) direction: (0.999947,-0.0102946,0) startTime: 4 speed: 235.268
** Event #58  T=4.5  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 9
Passed: Check for correct target position of border handling 9
Passed: Check for correct step of border handling 9
updatePosition:  HostMove  startPos: (120,0,60) direction: (0.999947,0.0102946,0) startTime: 4.5 speed: 235.268
** Event #59  T=4.5  8% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 9
Passed: Check for correct start position of border move 9
Passed: Check for correct direction of border move 9
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 10
Passed: Check for correct target position of border handling 10
Passed: Check for correct step of border handling 10
updatePosition:  HostMove  startPos: (60,60,0.5) direction: (0,0,-1) startTime: 4.5 speed: 1
** Event #60  T=4.554488317738  9% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,60,0.5) direction: (0,0,-1) startTime: 4.5 speed: 1
** Event #61  T=4.654488317738  9% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,60,0.5) direction: (0,0,-1) startTime: 4.5 speed: 1
** Event #62  T=4.754488317738  9% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,60,0.5) direction: (0,0,-1) startTime: 4.5 speed: 1
** Event #63  T=4.854488317738  9% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,60,0.5) direction: (0,0,-1) startTime: 4.5 speed: 1
** Event #64  T=4.954488317738  9% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (60,60,0.5) direction: (0,0,-1) startTime: 4.5 speed: 1
** Event #65  T=5  10% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 10
Passed: Check for correct start position of border move 10
Passed: Check for correct direction of border move 10
Passed: In our test every handleIfOutside should find a collission.
updatePosition:  HostMove  startPos: (0.231,60,119.76) direction: (-0.693469,0,0.720487) startTime: 5 speed: 0.666216
** Event #66  T=5.054488317738  10% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.231,60,119.76) direction: (-0.693469,0,0.720487) startTime: 5 speed: 0.666216
** Event #67  T=5.154488317738  10% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.231,60,119.76) direction: (-0.693469,0,0.720487) startTime: 5 speed: 0.666216
** Event #68  T=5.254488317738  10% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.231,60,119.76) direction: (-0.693469,0,0.720487) startTime: 5 speed: 0.666216
** Event #69  T=5.354488317738  10% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.231,60,119.76) direction: (-0.693469,0,0.720487) startTime: 5 speed: 0.666216
** Event #70  T=5.454488317738  10% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (0.231,60,119.76) direction: (-0.693469,0,0.720487) startTime: 5 speed: 0.666216
** Event #71  T=5.5  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 11
Passed: Check for correct target position of border handling 11
Passed: Check for correct step of border handling 11
updatePosition:  HostMove  startPos: (0,60,120) direction: (-0.693469,0,-0.720487) startTime: 5.5 speed: 0.666216
** Event #72  T=5.5  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 11
Passed: Check for correct start position of border move 11
Passed: Check for correct direction of border move 11
Passed: In our test every handleIfOutside should find a collission.
updatePosition:  HostMove  startPos: (118.5,119.5,119.5) direction: (0.904534,0.301511,0.301511) startTime: 5.5 speed: 3.31662
** Event #73  T=5.554488317738  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (118.5,119.5,119.5) direction: (0.904534,0.301511,0.301511) startTime: 5.5 speed: 3.31662
** Event #74  T=5.654488317738  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (118.5,119.5,119.5) direction: (0.904534,0.301511,0.301511) startTime: 5.5 speed: 3.31662
** Event #75  T=5.754488317738  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (118.5,119.5,119.5) direction: (0.904534,0.301511,0.301511) startTime: 5.5 speed: 3.31662
** Event #76  T=5.854488317738  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (118.5,119.5,119.5) direction: (0.904534,0.301511,0.301511) startTime: 5.5 speed: 3.31662
** Event #77  T=5.954488317738  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (118.5,119.5,119.5) direction: (0.904534,0.301511,0.301511) startTime: 5.5 speed: 3.31662
** Event #78  T=6  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: In our test every handleIfOutside should find a collission.
updatePosition:  HostMove  startPos: (120,120,120) direction: (0.904534,0.301511,-0.301511) startTime: 6 speed: 3.31662
** Event #79  T=6  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: In our test every handleIfOutside should find a collission.
Passed: Check for correct step target of border handling 12
Passed: Check for correct target position of border handling 12
Passed: Check for correct step of border handling 12
updatePosition:  HostMove  startPos: (120,120,120) direction: (-0.904534,0.301511,-0.301511) startTime: 6 speed: 3.31662
** Event #80  T=6  11% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
Passed: Check for correct arrival time of border message 12
Passed: Check for correct start position of border move 12
Passed: Check for correct direction of border move 12
updatePosition:  HostMove  startPos: (120,120,120) direction: (-0.904534,-0.301511,-0.301511) startTime: 6 speed: 0
** Event #81  T=6.054488317738  12% completed   bmSim.node2[0].mobility (TestBMBaseMobility, id=8)
updatePosition:  HostMove  startPos: (120,120,120) direction: (-0.904534,-0.301511,-0.301511) startTime: 6 speed: 0

<!> No more events -- simulation ended at event #82, t=6.054488317738.


Calling finish() at end of Run #0...
Passed: Check if all tests passed.
Passed: Checking if all mobility tests passed.

End.
